---
const { title = "Victor RPT", description = "Sitio personal de Victor Perez" } = Astro.props;
import "../assets/css/styles.css";
const isEs = Astro.url.pathname.startsWith('/es');
const lang = isEs ? 'es' : 'en';
const labels = isEs
  ? { home: 'Inicio', blog: 'Blog', projects: 'Proyectos', cv: 'CV', contact: 'Contacto' }
  : { home: 'Home', blog: 'Blog', projects: 'Projects', cv: 'Resume', contact: 'Contact' };
const base = isEs ? '/es' : '';
const PROD = import.meta.env.PROD;
const GA_ID = import.meta.env.PUBLIC_GA_ID;
const gaInline = GA_ID
  ? `window.dataLayer=window.dataLayer||[];function gtag(){dataLayer.push(arguments);}gtag('js',new Date());gtag('config','${GA_ID}',{anonymize_ip:true});`
  : '';
---
<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="icon" href="/favicon.svg" />
    <script is:inline>
      // Initialize theme early to avoid flash
      try {
        const pref = localStorage.getItem('theme');
        const sysDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
        const useDark = pref ? pref === 'dark' : sysDark;
        document.documentElement.classList.toggle('dark', useDark);
      } catch {}
    </script>
    {PROD && GA_ID && (
      <>
        <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA_ID}`}></script>
        <script is:inline set:html={gaInline} />
      </>
    )}
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 min-h-screen flex flex-col">
    <header class="border-b border-gray-200 dark:border-gray-800 bg-white/70 dark:bg-gray-900/70 backdrop-blur sticky top-0 z-10">
      <nav class="container mx-auto px-4 py-3">
        <div class="flex items-center justify-between">
          <a class="font-semibold hover:text-blue-600 text-sm sm:text-base" href={`${base}/`}>Victor RPT</a>
          <button id="menu-toggle" aria-label="Open menu" aria-expanded="false" aria-controls="menu-panel" class="sm:hidden rounded border border-gray-300 dark:border-gray-700 px-3 py-2 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500">
            <span id="menu-icon" aria-hidden="true">‚ò∞</span>
          </button>
        </div>
        <div
          id="menu-panel"
          role="menu"
          class="hidden fixed inset-0 z-40 p-4 pt-20 backdrop-blur bg-white/70 dark:bg-gray-900/70
                 sm:static sm:z-auto sm:p-0 sm:pt-0 sm:mt-0 sm:flex sm:flex-row sm:items-center sm:gap-6 sm:bg-transparent sm:backdrop-blur-0"
        >
          <div id="menu-sheet" class="mx-auto w-full max-w-sm flex flex-col gap-3 text-base sm:text-sm sm:flex-row sm:items-center sm:gap-6 sm:max-w-none sm:w-auto">
            <a role="menuitem" class="block w-full rounded-xl border border-gray-300/80 dark:border-gray-700/80 px-4 py-3 text-center font-medium bg-white/90 dark:bg-gray-800/90 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 dark:hover:from-gray-800 dark:hover:to-gray-700 shadow-sm hover:shadow transition sm:border-none sm:bg-transparent sm:hover:bg-transparent sm:shadow-none sm:px-0 sm:py-0 sm:w-auto" href={`${base}/`}>{labels.home}</a>
            <a role="menuitem" class="block w-full rounded-xl border border-gray-300/80 dark:border-gray-700/80 px-4 py-3 text-center font-medium bg-white/90 dark:bg-gray-800/90 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 dark:hover:from-gray-800 dark:hover:to-gray-700 shadow-sm hover:shadow transition sm:border-none sm:bg-transparent sm:hover:bg-transparent sm:shadow-none sm:px-0 sm:py-0 sm:w-auto" href={`${base}/blog`}>{labels.blog}</a>
            <a role="menuitem" class="block w-full rounded-xl border border-gray-300/80 dark:border-gray-700/80 px-4 py-3 text-center font-medium bg-white/90 dark:bg-gray-800/90 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 dark:hover:from-gray-800 dark:hover:to-gray-700 shadow-sm hover:shadow transition sm:border-none sm:bg-transparent sm:hover:bg-transparent sm:shadow-none sm:px-0 sm:py-0 sm:w-auto" href={`${base}/projects`}>{labels.projects}</a>
            <a role="menuitem" class="block w-full rounded-xl border border-gray-300/80 dark:border-gray-700/80 px-4 py-3 text-center font-medium bg-white/90 dark:bg-gray-800/90 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 dark:hover:from-gray-800 dark:hover:to-gray-700 shadow-sm hover:shadow transition sm:border-none sm:bg-transparent sm:hover:bg-transparent sm:shadow-none sm:px-0 sm:py-0 sm:w-auto" href={`${base}/cv`}>{labels.cv}</a>
            <a role="menuitem" class="block w-full rounded-xl border border-gray-300/80 dark:border-gray-700/80 px-4 py-3 text-center font-medium bg-white/90 dark:bg-gray-800/90 hover:bg-gradient-to-r hover:from-blue-50 hover:to-indigo-50 dark:hover:from-gray-800 dark:hover:to-gray-700 shadow-sm hover:shadow transition sm:border-none sm:bg-transparent sm:hover:bg-transparent sm:shadow-none sm:px-0 sm:py-0 sm:w-auto sm:ml-auto" href={`${base}/contact`}>{labels.contact}</a>
            <div class="flex gap-2 sm:gap-3 w-full sm:w-auto">
              <span class="flex-1 sm:flex-initial inline-flex items-center justify-center gap-1 border border-gray-300 dark:border-gray-700 rounded px-3 py-2 bg-white/90 dark:bg-gray-800/90 sm:px-2 sm:py-1">
                <a id="lang-en" class={`hover:text-blue-600 ${!isEs ? 'font-semibold' : ''}`} href={Astro.url.pathname.replace(/^\/es/, '')}>EN</a>
                <span aria-hidden="true">|</span>
                <a id="lang-es" class={`hover:text-blue-600 ${isEs ? 'font-semibold' : ''}`} href={Astro.url.pathname.startsWith('/es') ? Astro.url.pathname : `/es${Astro.url.pathname}`}>ES</a>
              </span>
              <button id="theme-toggle" aria-label="Toggle dark mode" class="flex-1 sm:flex-initial rounded border border-gray-300 dark:border-gray-700 px-3 py-2 bg-white/90 dark:bg-gray-800/90 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500 sm:px-2 sm:py-1">
                <span class="inline dark:hidden">üåô</span>
                <span class="hidden dark:inline">‚òÄÔ∏è</span>
              </button>
            </div>
          </div>
        </div>
      </nav>
    </header>
    <main class="container mx-auto px-4 py-8 grow overflow-x-hidden">
      <slot />
    </main>
    <footer class="border-t border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900 text-center text-sm text-gray-600 dark:text-gray-400 py-6">
      ¬© {new Date().getFullYear()} Victor RPT ‚Äî victorrpt.com
    </footer>

    <script>
      // Persist language preference when clicking toggle
      document.addEventListener('click', (e) => {
        const t = e.target;
        if (!(t instanceof HTMLElement)) return;
        if (t.id === 'lang-en') {
          try { localStorage.setItem('prefLang', 'en'); } catch {}
        }
        if (t.id === 'lang-es') {
          try { localStorage.setItem('prefLang', 'es'); } catch {}
        }
      });
      // Auto-redirect on first visit based on browser language if no preference set
      try {
        const pref = localStorage.getItem('prefLang');
        const redirected = sessionStorage.getItem('langRedirected');
        if (!pref && !redirected) {
          const wantsEs = (navigator.language || navigator.userLanguage || '').toLowerCase().startsWith('es');
          const path = location.pathname;
          if (wantsEs && !path.startsWith('/es')) {
            sessionStorage.setItem('langRedirected', '1');
            location.replace('/es' + path);
          }
        }
      } catch {}

      // Theme toggle
      (function(){
        const btn = document.getElementById('theme-toggle');
        if (!btn) return;
        btn.addEventListener('click', () => {
          const isDark = document.documentElement.classList.toggle('dark');
          try { localStorage.setItem('theme', isDark ? 'dark' : 'light'); } catch {}
        });
      })();

      // Mobile menu toggle
      (function(){
        const btn = document.getElementById('menu-toggle');
        const panel = document.getElementById('menu-panel');
        const icon = document.getElementById('menu-icon');
        if (!btn || !panel || !icon) return;
        const toggle = () => {
          panel.classList.toggle('hidden');
          const expanded = !panel.classList.contains('hidden');
          btn.setAttribute('aria-expanded', expanded ? 'true' : 'false');
          icon.textContent = expanded ? '‚úï' : '‚ò∞';
          btn.setAttribute('aria-label', expanded ? 'Close menu' : 'Open menu');
          // Lock body scroll when menu is open on mobile
          if (window.innerWidth < 640) {
            document.body.classList.toggle('overflow-hidden', expanded);
          }
        };
        btn.addEventListener('click', toggle);
        // Close on Escape
        window.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && window.innerWidth < 640 && !panel.classList.contains('hidden')) toggle();
        });
        // Click outside to close (only when clicking the translucent backdrop, not the sheet)
        panel.addEventListener('click', (e) => {
          const t = e.target;
          if (t === panel && window.innerWidth < 640) {
            toggle();
            return;
          }
          if (t instanceof HTMLAnchorElement && window.innerWidth < 640) {
            panel.classList.add('hidden');
            btn.setAttribute('aria-expanded','false');
            icon.textContent = '‚ò∞';
            btn.setAttribute('aria-label','Open menu');
            document.body.classList.remove('overflow-hidden');
          }
        });
        // Close on resize up
        window.addEventListener('resize', () => {
          if (window.innerWidth >= 640) {
            panel.classList.remove('hidden');
            btn.setAttribute('aria-expanded','true');
            icon.textContent = '‚úï';
            document.body.classList.remove('overflow-hidden');
          } else {
            panel.classList.add('hidden');
            btn.setAttribute('aria-expanded','false');
            icon.textContent = '‚ò∞';
            document.body.classList.remove('overflow-hidden');
          }
        });
      })();
    </script>
  </body>
</html>
